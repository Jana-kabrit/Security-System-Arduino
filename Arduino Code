#include <LiquidCrystal.h> 

LiquidCrystal lcd(1, 2, 3, 4, 5, 6); // Creates an LCD object. Parameters: (rs, enable, d4, d5, d6, d7)
int c1 = 9, c2 = 8, c3 = 7;
int r1 = 13, r2 = 12, r3 = 11, r4 = 10;
int buzzer = 14;
unsigned long previousDebounceTime = 0;
unsigned long debounceDelay = 50;

int pressed = 0, tries = 0;
int num1, num2, num3, num4, placeholder;
const int code1 = 1, code2 = 5, code3 = 7, code4 = 9;

void setup() {
  lcd.begin(16,2); // Initializes the interface to the LCD screen, and specifies the dimensions (width and height) of the display
  lcd.setCursor(0, 0);
  lcd.print("Please enter");
  lcd.setCursor(0,1);
  lcd.print("your pincode.");
  delay(1000);
  lcd.clear();
  pinMode(c1, INPUT_PULLUP);
  pinMode(c2, INPUT_PULLUP);
  pinMode(c3, INPUT_PULLUP);

  pinMode(r1, OUTPUT);
  pinMode(r2, OUTPUT);
  pinMode(r3, OUTPUT);
  pinMode(r4, OUTPUT);
  
  pinMode(buzzer, OUTPUT);
}

void loop() {
  row1();
  row2();
  row3();
  row4();
  if(pressed == 1)
    num1 = placeholder;
  else if(pressed == 2)
    num2 = placeholder;
  else if(pressed == 3)
    num3 = placeholder;
  else if(pressed == 4){  
    num4 = placeholder;
    delay(200);
    if(num1 == code1 && num2 == code2 && num3 == code3 && num4 == code4){
      lcd.clear();
      lcd.setCursor(0,0);
      lcd.print("CORRECT");
      lcd.setCursor(0,1);
      lcd.print("You may enter.");
      delay(1000);
    }
    else{
      tries++;
      if(tries < 3){
        lcd.clear();
        lcd.setCursor(0,0);
        lcd.print("WRONG");
        lcd.setCursor(0,1);
        lcd.print("Try again.");
        delay(1000);
        lcd.clear();
        pressed = 0;
      }
      else{
        lcd.clear();
        lcd.setCursor(0,0);
        lcd.print("INTRUDER ALERT");
        lcd.setCursor(0,1);
        lcd.print("Locked out.");
        tone(buzzer, 500, 200);
        delay(300);
      }
    }
  }
}

void row1() {
  digitalWrite(r1, LOW);
  digitalWrite(r2, HIGH);
  digitalWrite(r3, HIGH);
  digitalWrite(r4, HIGH);
  
  if (debounce(c1) == LOW) {
    lcd.print("1");
    placeholder = 1;
  }
  else if (debounce(c2) == LOW) {
    lcd.print("2");
    placeholder = 2;
  }
  else if (debounce(c3) == LOW) {
    lcd.print("3");
    placeholder = 3;
  }
}

void row2() {
  digitalWrite(r1, HIGH);
  digitalWrite(r2, LOW);
  digitalWrite(r3, HIGH);
  digitalWrite(r4, HIGH);
  
  if (debounce(c1) == LOW) {
    lcd.print("4");
    placeholder = 4;
  }
  else if (debounce(c2) == LOW) {
    lcd.print("5");
    placeholder = 5;
  }
  else if (debounce(c3) == LOW) {
    lcd.print("6");
    placeholder = 6;
  }
}

void row3() {
  digitalWrite(r1, HIGH);
  digitalWrite(r2, HIGH);
  digitalWrite(r3, LOW);
  digitalWrite(r4, HIGH);

  if (debounce(c1) == LOW) {
    lcd.print("7");
    placeholder = 7;
  }
  else if (debounce(c2) == LOW) {
    lcd.print("8");
    placeholder = 8;
  }
  else if (debounce(c3) == LOW) {
    lcd.print("9");
    placeholder = 9;
  }
}

void row4() {
  digitalWrite(r1, HIGH);
  digitalWrite(r2, HIGH);
  digitalWrite(r3, HIGH);
  digitalWrite(r4, LOW);

  if (debounce(c2) == LOW) {
    lcd.print("0");
    placeholder = 0;
  }
}

int debounce(int buttonPin){
  int reading = digitalRead(buttonPin);
  
  if (reading == LOW) {
    if ((millis() - previousDebounceTime) > debounceDelay) {
      previousDebounceTime = millis();
      pressed++;
      return LOW;
    }
  }
  return HIGH;
} 

